/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smpfinal;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Ramon
 */
public class VentanaDialogoTamanio extends javax.swing.JDialog {
    
    VentanaInternaImagen vi = null;

    /**
     * Ventana de Dialogo de tamaño. Dicha ventana se llama desde la VentanaPrincipal
     * para editar las opciones de tamaño de la imagen, permitiendo asi "Escalar" la imagen y
     * "Redimensionarla".
     */
    public VentanaDialogoTamanio(java.awt.Frame parent, boolean modal, VentanaInternaImagen vi) {
        super(parent, modal);
        this.vi=vi;
        initComponents();
        this.modificarTexto();
    }
    
    /*
    Este método me permite modificar el texto de los JLabel con la informacion
    de la imagen que esté en la ventana activa.
    */
    
    public void modificarTexto(){
        int alto = vi.getLienzo2D().getImage().getWidth();
        int ancho = vi.getLienzo2D().getImage().getHeight();
        this.textoAlto.setText(Integer.toString(alto));
        this.textoAncho.setText(Integer.toString(ancho));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonEscalar = new javax.swing.JButton();
        botonRedimensionar = new javax.swing.JButton();
        botonAceptarCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textoAncho = new javax.swing.JTextField();
        textoPx1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textoAlto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        // por defecto, oculto
        botonEscalar.setVisible(false);
        botonEscalar.setText("Escalar");
        botonEscalar.setToolTipText("Escalar la imagen al tamaño indicado");
        botonEscalar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEscalarActionPerformed(evt);
            }
        });
        jPanel1.add(botonEscalar);

        // por defecto, oculto
        botonRedimensionar.setVisible(false);
        botonRedimensionar.setText("Redimensionar");
        botonRedimensionar.setToolTipText("Redimensiona la imagen al tamaño deseado");
        botonRedimensionar.setFocusCycleRoot(true);
        botonRedimensionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRedimensionarActionPerformed(evt);
            }
        });
        jPanel1.add(botonRedimensionar);

        botonAceptarCancelar.setText("Aceptar");
        botonAceptarCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(botonAceptarCancelar);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(2, 3));

        jLabel1.setText("Ancho:");
        jPanel2.add(jLabel1);

        textoAncho.setText(" ");
        textoAncho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoAnchoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoAnchoKeyTyped(evt);
            }
        });
        jPanel2.add(textoAncho);

        textoPx1.setText("  px");
        jPanel2.add(textoPx1);

        jLabel2.setText("Alto:");
        jPanel2.add(jLabel2);

        textoAlto.setText(" ");
        textoAlto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoAltoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoAltoKeyTyped(evt);
            }
        });
        jPanel2.add(textoAlto);

        jLabel4.setText("  px");
        jPanel2.add(jLabel4);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarCancelarActionPerformed
        this.dispose(); // cierro la ventana
    }//GEN-LAST:event_botonAceptarCancelarActionPerformed

    private void botonRedimensionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRedimensionarActionPerformed
        // Hay que comprobar que los campos no estén vacios
        if (!this.textoAlto.getText().isEmpty() && !this.textoAncho.getText().isEmpty()) {
            // Cogemos los valores del texto y editamos el tamaño del contorno
            int alto = Integer.valueOf(this.textoAlto.getText());
            int ancho = Integer.valueOf(this.textoAncho.getText());
            BufferedImage img_recortada = null;
            // Recortamos la imagen (si son los valores menores)
            if (alto <= this.vi.getLienzo2D().getImage().getHeight()
                    && ancho <= this.vi.getLienzo2D().getImage().getWidth()) {
                img_recortada = this.vi.getLienzo2D().getImage().getSubimage(0, 0, alto, ancho);
                this.vi.getLienzo2D().setImage(img_recortada);
                //this.vi.getLienzo2D().modificarContorno(alto, ancho); no es necesario, ya lo hace mi metodo setImage()
            } else {
                /* En caso contrario, he de editar la imagen actual con el tamaño de la nueva.
                Para ello, creo un nuevo lienzo con las nuevas medidas y vuelvo el contenido
                de lo que había anteriormente.
                */
                BufferedImage aux = this.vi.getLienzo2D().getImage();
                img_recortada = new BufferedImage(alto, ancho, aux.getType());
                Graphics2D g2d = img_recortada.createGraphics();
                g2d.fillRect(0, 0, alto, ancho);
                g2d.drawImage(aux, 0, 0, aux.getWidth(), aux.getHeight(), null);
                //this.vi.getLienzo2D().modificarContorno(alto, ancho);
                //this.vi.getLienzo2D().repaint();
                //img_recortada = this.vi.getLienzo2D().getImage(true);
                this.vi.getLienzo2D().setImage(img_recortada);
            }
            this.vi.getLienzo2D().repaint(); // <- importante
            // como modifico ahora las propiedades para que tras editarlo, se quede con las nuevas? llamo de nuevo a mi metodo
            this.modificarTexto(); // no lo hace correctamente, preguntar
            // finalmente, que la ventana se cierre
            this.dispose();
        }else{
            // Mensaje de error si alguno de los campos esta vacio
            JOptionPane.showMessageDialog(new JFrame(), "Los campos no pueden estar vacios",
                    "Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonRedimensionarActionPerformed

    private void botonEscalarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEscalarActionPerformed
        if (!this.textoAlto.getText().isEmpty() && !this.textoAncho.getText().isEmpty()) {
            int alto = Integer.valueOf(this.textoAlto.getText());
            int ancho = Integer.valueOf(this.textoAncho.getText());

            /* Creare una nueva imagen a partir de la que habia, la cual
            tendra el nuevo ancho y alto introducidos
            */
            BufferedImage img = this.vi.getLienzo2D().getImage();
            //Image tmp = img.getScaledInstance(alto, ancho, Image.SCALE_SMOOTH);
            BufferedImage imgOut = new BufferedImage(alto, ancho, img.getType());
            Graphics2D g2d = imgOut.createGraphics();

            g2d.drawImage(img, 0, 0, alto, ancho, null);
            this.vi.getLienzo2D().setImage(imgOut);
            this.vi.getLienzo2D().repaint(); // <- importante
            // como modifico ahora las propiedades para que tras editarlo, se quede con las nuevas? llamo de nuevo a mi metodo
            this.modificarTexto(); // no lo hace correctamente, preguntar
            // finalmente, que la ventana se cierre
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(new JFrame(), "Los campos no pueden estar vacios",
                    "Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonEscalarActionPerformed

    private void textoAltoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoAltoKeyPressed
        this.botonAceptarCancelar.setText("Cancelar");
        this.botonEscalar.setVisible(true);
        this.botonRedimensionar.setVisible(true);
    }//GEN-LAST:event_textoAltoKeyPressed

    private void textoAnchoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoAnchoKeyPressed
        this.textoAltoKeyPressed(evt);
    }//GEN-LAST:event_textoAnchoKeyPressed

    private void textoAnchoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoAnchoKeyTyped
        // Evento para evitar que se introduzcan algo que no sean numeros
        char entrada = evt.getKeyChar();
        if(!(Character.isDigit(entrada))){
            evt.consume();
        }
    }//GEN-LAST:event_textoAnchoKeyTyped

    private void textoAltoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoAltoKeyTyped
        this.textoAnchoKeyTyped(evt);
    }//GEN-LAST:event_textoAltoKeyTyped

    /* NOS SIRVE DE ALGO EL MAIN? PREGUNTar
    /**
     * @param args the command line arguments
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaDialogoTamanio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaDialogoTamanio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaDialogoTamanio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaDialogoTamanio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaDialogoTamanio dialog = new VentanaDialogoTamanio(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptarCancelar;
    private javax.swing.JButton botonEscalar;
    private javax.swing.JButton botonRedimensionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField textoAlto;
    private javax.swing.JTextField textoAncho;
    private javax.swing.JLabel textoPx1;
    // End of variables declaration//GEN-END:variables
}
